{
    "info": {
        "_postman_id": "e63bd9fd-7e01-4ced-b0aa-45b219c4918d",
        "name": "Transaccion",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "_exporter_id": "49447336",
        "_collection_link": "https://aksan01-8772994.postman.co/workspace/Santiago's-Workspace~90e5ddf1-7a95-4677-8779-7011e07e002b/collection/49447336-e63bd9fd-7e01-4ced-b0aa-45b219c4918d?action=share&source=collection_link&creator=49447336"
    },
    "item": [
        {
            "name": "Create Transaccion",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 201 Created\", () => { pm.response.to.have.status(201); });",
                            "const jsonData = pm.response.json();",
                            "pm.test(\"Transaction has an ID\", () => { pm.expect(jsonData.id).to.be.a('number'); });",
                            "pm.collectionVariables.set(\"transaccion_id\", jsonData.id);",
                            "console.log(\"Transaccion ID guardada: \" + jsonData.id);",
                            "",
                            "pm.test(\"Monto matches request\", () => { pm.expect(jsonData.monto).to.eql(150.50); });",
                            "pm.test(\"Estado is Pendiente\", () => { pm.expect(jsonData.estado).to.eql(\"Pendiente\"); });",
                            "pm.test(\"Estancia ID matches\", () => { pm.expect(jsonData.estancia.id).to.eql(parseInt(pm.collectionVariables.get(\"estancia_id\"))); });"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"monto\": 150.50,\n  \"metodoPago\": \"PSE\",\n  \"estado\": \"Pendiente\",\n  \"estancia\": {\n      \"id\": {{estancia_id}} \n  }\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{BaseURL}}/transacciones",
                    "host": [
                        "{{BaseURL}}"
                    ],
                    "path": [
                        "transacciones"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Obtener por estancia",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200 OK\", () => { pm.response.to.have.status(200); });",
                            "const jsonData = pm.response.json();",
                            "pm.test(\"Response is an array\", () => { pm.expect(jsonData).to.be.an('array'); });",
                            "// Opcional: Verificar si incluye la transacción recién creada",
                            "if (jsonData.length > 0) {",
                            "   const createdIdStr = pm.collectionVariables.get(\"transaccion_id\");",
                            "   if (createdIdStr) {",
                            "       const createdId = parseInt(createdIdStr);",
                            "       const found = jsonData.some(t => t.id === createdId);",
                            "       pm.test(\"Includes created transaction\", () => { pm.expect(found).to.be.true; });",
                            "   }",
                            "}"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{BaseURL}}/transacciones/estancia/{{estancia_id}}",
                    "host": [
                        "{{BaseURL}}"
                    ],
                    "path": [
                        "transacciones",
                        "estancia",
                        "{{estancia_id}}"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Get Transaccion por ID",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200 OK\", () => { pm.response.to.have.status(200); });",
                            "const jsonData = pm.response.json();",
                            "pm.test(\"ID matches requested ID\", () => { pm.expect(jsonData.id).to.eql(parseInt(pm.collectionVariables.get(\"transaccion_id\"))); });"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{BaseURL}}/transacciones/{{transaccion_id}}",
                    "host": [
                        "{{BaseURL}}"
                    ],
                    "path": [
                        "transacciones",
                        "{{transaccion_id}}"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Update Transaccion Estado",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200 OK\", () => { pm.response.to.have.status(200); });",
                            "const jsonData = pm.response.json();",
                            "pm.test(\"Estado is updated to Completada\", () => { pm.expect(jsonData.estado).to.eql(\"Completada\"); });"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "PUT",
                "header": [],
                "url": {
                    "raw": "{{BaseURL}}/transacciones/{{transaccion_id}}/actualizarEstado?estado=Completada",
                    "host": [
                        "{{BaseURL}}"
                    ],
                    "path": [
                        "transacciones",
                        "{{transaccion_id}}",
                        "actualizarEstado"
                    ],
                    "query": [
                        {
                            "key": "estado",
                            "value": "Completada"
                        }
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Eliminar Transaccion (Debe fallar)",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "// Esperamos 405 Method Not Allowed según el controlador",
                            "pm.test(\"Status code is 405 Method Not Allowed\", () => { pm.response.to.have.status(405); });"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                    "raw": "{{BaseURL}}/transacciones/{{transaccion_id}}",
                    "host": [
                        "{{BaseURL}}"
                    ],
                    "path": [
                        "transacciones",
                        "{{transaccion_id}}"
                    ]
                }
            },
            "response": []
        }
    ]
}